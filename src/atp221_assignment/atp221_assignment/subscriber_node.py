#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from std_msgs.msg import String

class SubscriberNode(Node):
    def __init__(self):
        super().__init__('vladislav_subscriber')
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –Ω–∞ —Ç–æ–ø–∏–∫ 'atp221_topic'
        self.subscription = self.create_subscription(
            String,
            'atp221_topic',
            self.listener_callback,
            10)
        
        self.get_logger().info('üëÇ –ü–æ–¥–ø–∏—Å—á–∏–∫ Vladislav –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...')
        self.get_logger().info('üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ç–æ–ø–∏–∫: /atp221_topic')

    def listener_callback(self, msg):
        # –í—ã–≤–æ–¥–∏–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.get_logger().info(f'üì• –ü–û–õ–£–ß–ï–ù–û: "{msg.data}"')

def main(args=None):
    rclpy.init(args=args)
    
    node = SubscriberNode()
    
    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        node.get_logger().info('üõë –ü–æ–¥–ø–∏—Å—á–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    except Exception as e:
        node.get_logger().error(f'‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–µ: {e}')
    finally:
        node.destroy_node()
        rclpy.shutdown()

if __name__ == '__main__':
    main()

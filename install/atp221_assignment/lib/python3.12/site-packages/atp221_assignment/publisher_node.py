#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
from std_msgs.msg import String
import time

class PublisherNode(Node):
    def __init__(self):
        super().__init__('vladislav_publisher')
        
        # –°–æ–∑–¥–∞–µ–º –∏–∑–¥–∞—Ç–µ–ª—è –¥–ª—è —Ç–æ–ø–∏–∫–∞ 'atp221_topic'
        self.publisher_ = self.create_publisher(String, 'atp221_topic', 10)
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
        self.timer = self.create_timer(2.0, self.timer_callback)
        
        # –°—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.counter = 0
        
        self.get_logger().info('üöÄ –ò–∑–¥–∞—Ç–µ–ª—å Vladislav –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!')
        self.get_logger().info('üì° –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ —Ç–æ–ø–∏–∫: /atp221_topic')
        self.get_logger().info('‚è∞ –ü–µ—Ä–∏–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏: 2 —Å–µ–∫—É–Ω–¥—ã')

    def timer_callback(self):
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = String()
        msg.data = f"Vladislav Mikhaylyuck ATP-221: –°–æ–æ–±—â–µ–Ω–∏–µ #{self.counter} - –í—Ä–µ–º—è: {time.strftime('%H:%M:%S')}"
        
        # –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        self.publisher_.publish(msg)
        
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
        self.get_logger().info(f'üì§ –û–¢–ü–†–ê–í–õ–ï–ù–û: "{msg.data}"')
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        self.counter += 1

def main(args=None):
    rclpy.init(args=args)
    
    node = PublisherNode()
    
    try:
        rclpy.spin(node)
    except KeyboardInterrupt:
        node.get_logger().info('üõë –ò–∑–¥–∞—Ç–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    except Exception as e:
        node.get_logger().error(f'‚ùå –û—à–∏–±–∫–∞ –≤ –∏–∑–¥–∞—Ç–µ–ª–µ: {e}')
    finally:
        node.destroy_node()
        rclpy.shutdown()

if __name__ == '__main__':
    main()
